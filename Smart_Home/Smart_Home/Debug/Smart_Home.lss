
Smart_Home.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000bf4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000c48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000c48  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c78  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  00000cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f3f  00000000  00000000  00000dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000893  00000000  00000000  00001d03  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000104a  00000000  00000000  00002596  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000264  00000000  00000000  000035e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005e6  00000000  00000000  00003844  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000cc3  00000000  00000000  00003e2a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00004aed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ef       	ldi	r30, 0xF4	; 244
  68:	fb e0       	ldi	r31, 0x0B	; 11
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 7a 00 	call	0xf4	; 0xf4 <main>
  8a:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <servo_init>:

#include "servo.h"

 // Initialized the servo
void servo_init(){
  DIO_init(SERVO_PIN, SERVO_PORT, OUT);
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	64 e4       	ldi	r22, 0x44	; 68
  96:	85 e0       	ldi	r24, 0x05	; 5
  98:	0e 94 b5 00 	call	0x16a	; 0x16a <DIO_init>
  PWM_init(SERVO_PWM_PIN, 0.05, PWM_PHASE_CORRECT);
  9c:	22 e0       	ldi	r18, 0x02	; 2
  9e:	4d ec       	ldi	r20, 0xCD	; 205
  a0:	5c ec       	ldi	r21, 0xCC	; 204
  a2:	6c e4       	ldi	r22, 0x4C	; 76
  a4:	7d e3       	ldi	r23, 0x3D	; 61
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <PWM_init>
  Timer_start(TIMER_1, 8);
  ac:	68 e0       	ldi	r22, 0x08	; 8
  ae:	70 e0       	ldi	r23, 0x00	; 0
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <Timer_start>
  b6:	08 95       	ret

000000b8 <servo_move_to_angle>:
  }

// Moves the servo to a specific angle (relative to the 0 angle position, not the previous one).
void servo_move_to_angle(uint8_t angle){
  // PWM_set_DC(SERVO_PWM_PIN, (((double)angle/ 180.0) / 20.0) + 0.05)
  PWM_set_DC(SERVO_PWM_PIN, (((double)angle / 3600.0) / 20.0) + 0.05);
  b8:	68 2f       	mov	r22, r24
  ba:	70 e0       	ldi	r23, 0x00	; 0
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__floatunsisf>
  c4:	20 e0       	ldi	r18, 0x00	; 0
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	41 e6       	ldi	r20, 0x61	; 97
  ca:	55 e4       	ldi	r21, 0x45	; 69
  cc:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__divsf3>
  d0:	20 e0       	ldi	r18, 0x00	; 0
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	40 ea       	ldi	r20, 0xA0	; 160
  d6:	51 e4       	ldi	r21, 0x41	; 65
  d8:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__divsf3>
  dc:	2d ec       	ldi	r18, 0xCD	; 205
  de:	3c ec       	ldi	r19, 0xCC	; 204
  e0:	4c e4       	ldi	r20, 0x4C	; 76
  e2:	5d e3       	ldi	r21, 0x3D	; 61
  e4:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__addsf3>
  e8:	ab 01       	movw	r20, r22
  ea:	bc 01       	movw	r22, r24
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	0e 94 b0 03 	call	0x760	; 0x760 <PWM_set_DC>
  f2:	08 95       	ret

000000f4 <main>:
#include "HAL/Servo/servo.h"
#include "MCAL/ADC/adc.h"
#include "MCAL/Timer/timer.h"

int main(void) {
	servo_init();
  f4:	0e 94 49 00 	call	0x92	; 0x92 <servo_init>
	while (1) {
		int i;
		for (i = 0; i < 185; i += 5)
  f8:	c0 e0       	ldi	r28, 0x00	; 0
  fa:	d0 e0       	ldi	r29, 0x00	; 0
  fc:	0d c0       	rjmp	.+26     	; 0x118 <main+0x24>
		{
			servo_move_to_angle(i);
  fe:	8c 2f       	mov	r24, r28
 100:	0e 94 5c 00 	call	0xb8	; 0xb8 <servo_move_to_angle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 104:	2f ef       	ldi	r18, 0xFF	; 255
 106:	89 ef       	ldi	r24, 0xF9	; 249
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	80 40       	sbci	r24, 0x00	; 0
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	e1 f7       	brne	.-8      	; 0x10a <main+0x16>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0x20>
 114:	00 00       	nop

int main(void) {
	servo_init();
	while (1) {
		int i;
		for (i = 0; i < 185; i += 5)
 116:	25 96       	adiw	r28, 0x05	; 5
 118:	c9 3b       	cpi	r28, 0xB9	; 185
 11a:	d1 05       	cpc	r29, r1
 11c:	84 f3       	brlt	.-32     	; 0xfe <main+0xa>
 11e:	c4 eb       	ldi	r28, 0xB4	; 180
 120:	d0 e0       	ldi	r29, 0x00	; 0
 122:	0d c0       	rjmp	.+26     	; 0x13e <main+0x4a>
			servo_move_to_angle(i);
			_delay_ms(20);
			}
		for (i = 180; i >= 0; i -= 5)
		{
			servo_move_to_angle(i);
 124:	8c 2f       	mov	r24, r28
 126:	0e 94 5c 00 	call	0xb8	; 0xb8 <servo_move_to_angle>
 12a:	2f ef       	ldi	r18, 0xFF	; 255
 12c:	89 ef       	ldi	r24, 0xF9	; 249
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	21 50       	subi	r18, 0x01	; 1
 132:	80 40       	sbci	r24, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0x3c>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0x46>
 13a:	00 00       	nop
		for (i = 0; i < 185; i += 5)
		{
			servo_move_to_angle(i);
			_delay_ms(20);
			}
		for (i = 180; i >= 0; i -= 5)
 13c:	25 97       	sbiw	r28, 0x05	; 5
 13e:	dd 23       	and	r29, r29
 140:	8c f7       	brge	.-30     	; 0x124 <main+0x30>
 142:	da cf       	rjmp	.-76     	; 0xf8 <main+0x4>

00000144 <isValidPinNumber>:
bool isValidState(uint8_t state) {
	if (state == HIGH || state == LOW) {
		return true;
		}
	return false;
	}
 144:	88 30       	cpi	r24, 0x08	; 8
 146:	10 f4       	brcc	.+4      	; 0x14c <isValidPinNumber+0x8>
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	08 95       	ret
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	08 95       	ret

00000150 <isValidPortNumber>:
 150:	81 54       	subi	r24, 0x41	; 65
 152:	84 30       	cpi	r24, 0x04	; 4
 154:	10 f4       	brcc	.+4      	; 0x15a <isValidPortNumber+0xa>
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	08 95       	ret
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	08 95       	ret

0000015e <isValidDirection>:
 15e:	82 30       	cpi	r24, 0x02	; 2
 160:	10 f4       	brcc	.+4      	; 0x166 <isValidDirection+0x8>
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	08 95       	ret
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	08 95       	ret

0000016a <DIO_init>:

// Initialize the pin direction
EN_dioError_t DIO_init(uint8_t pinNumber, uint8_t portNumber, uint8_t direction) {
 16a:	1f 93       	push	r17
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
 170:	c8 2f       	mov	r28, r24
 172:	d6 2f       	mov	r29, r22
 174:	14 2f       	mov	r17, r20
	// Validate the pin number
	if (!isValidPinNumber(pinNumber)) {
 176:	0e 94 a2 00 	call	0x144	; 0x144 <isValidPinNumber>
 17a:	88 23       	and	r24, r24
 17c:	09 f4       	brne	.+2      	; 0x180 <DIO_init+0x16>
 17e:	84 c0       	rjmp	.+264    	; 0x288 <DIO_init+0x11e>
		return WRONG_PIN;
		}
	// Validate the port number
	if (!isValidPortNumber(portNumber)) {
 180:	8d 2f       	mov	r24, r29
 182:	0e 94 a8 00 	call	0x150	; 0x150 <isValidPortNumber>
 186:	88 23       	and	r24, r24
 188:	09 f4       	brne	.+2      	; 0x18c <DIO_init+0x22>
 18a:	80 c0       	rjmp	.+256    	; 0x28c <DIO_init+0x122>
		return WRONG_PORT;
		}
	// Validate the direction
	if (!isValidDirection(direction)) {
 18c:	81 2f       	mov	r24, r17
 18e:	0e 94 af 00 	call	0x15e	; 0x15e <isValidDirection>
 192:	88 23       	and	r24, r24
 194:	09 f4       	brne	.+2      	; 0x198 <DIO_init+0x2e>
 196:	7c c0       	rjmp	.+248    	; 0x290 <DIO_init+0x126>
		return WRONG_DIRECTION;
		}
	switch (portNumber) {
 198:	d2 34       	cpi	r29, 0x42	; 66
 19a:	29 f1       	breq	.+74     	; 0x1e6 <DIO_init+0x7c>
 19c:	18 f4       	brcc	.+6      	; 0x1a4 <DIO_init+0x3a>
 19e:	d1 34       	cpi	r29, 0x41	; 65
 1a0:	39 f0       	breq	.+14     	; 0x1b0 <DIO_init+0x46>
 1a2:	78 c0       	rjmp	.+240    	; 0x294 <DIO_init+0x12a>
 1a4:	d3 34       	cpi	r29, 0x43	; 67
 1a6:	d1 f1       	breq	.+116    	; 0x21c <DIO_init+0xb2>
 1a8:	d4 34       	cpi	r29, 0x44	; 68
 1aa:	09 f4       	brne	.+2      	; 0x1ae <DIO_init+0x44>
 1ac:	52 c0       	rjmp	.+164    	; 0x252 <DIO_init+0xe8>
 1ae:	72 c0       	rjmp	.+228    	; 0x294 <DIO_init+0x12a>
			case PORT_A:
				if (direction == OUT) {
 1b0:	11 30       	cpi	r17, 0x01	; 1
 1b2:	61 f4       	brne	.+24     	; 0x1cc <DIO_init+0x62>
					set_bit(DDRA, pinNumber);
 1b4:	2a b3       	in	r18, 0x1a	; 26
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <DIO_init+0x56>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	ca 95       	dec	r28
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <DIO_init+0x52>
 1c4:	82 2b       	or	r24, r18
 1c6:	8a bb       	out	0x1a, r24	; 26
				else {
					clear_bit(DDRD, pinNumber);
					}
				break;
		}
	return DIO_OK;
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	65 c0       	rjmp	.+202    	; 0x296 <DIO_init+0x12c>
			case PORT_A:
				if (direction == OUT) {
					set_bit(DDRA, pinNumber);
					}
				else {
					clear_bit(DDRA, pinNumber);
 1cc:	2a b3       	in	r18, 0x1a	; 26
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <DIO_init+0x6e>
 1d4:	88 0f       	add	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	ca 95       	dec	r28
 1da:	e2 f7       	brpl	.-8      	; 0x1d4 <DIO_init+0x6a>
 1dc:	80 95       	com	r24
 1de:	82 23       	and	r24, r18
 1e0:	8a bb       	out	0x1a, r24	; 26
				else {
					clear_bit(DDRD, pinNumber);
					}
				break;
		}
	return DIO_OK;
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	58 c0       	rjmp	.+176    	; 0x296 <DIO_init+0x12c>
				else {
					clear_bit(DDRA, pinNumber);
					}
				break;
			case PORT_B:
				if (direction == OUT) {
 1e6:	11 30       	cpi	r17, 0x01	; 1
 1e8:	61 f4       	brne	.+24     	; 0x202 <DIO_init+0x98>
					set_bit(DDRB, pinNumber);
 1ea:	27 b3       	in	r18, 0x17	; 23
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_init+0x8c>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	ca 95       	dec	r28
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_init+0x88>
 1fa:	82 2b       	or	r24, r18
 1fc:	87 bb       	out	0x17, r24	; 23
				else {
					clear_bit(DDRD, pinNumber);
					}
				break;
		}
	return DIO_OK;
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	4a c0       	rjmp	.+148    	; 0x296 <DIO_init+0x12c>
			case PORT_B:
				if (direction == OUT) {
					set_bit(DDRB, pinNumber);
					}
				else {
					clear_bit(DDRB, pinNumber);
 202:	27 b3       	in	r18, 0x17	; 23
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	02 c0       	rjmp	.+4      	; 0x20e <DIO_init+0xa4>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	ca 95       	dec	r28
 210:	e2 f7       	brpl	.-8      	; 0x20a <DIO_init+0xa0>
 212:	80 95       	com	r24
 214:	82 23       	and	r24, r18
 216:	87 bb       	out	0x17, r24	; 23
				else {
					clear_bit(DDRD, pinNumber);
					}
				break;
		}
	return DIO_OK;
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	3d c0       	rjmp	.+122    	; 0x296 <DIO_init+0x12c>
				else {
					clear_bit(DDRB, pinNumber);
					}
				break;
			case PORT_C:
				if (direction == OUT) {
 21c:	11 30       	cpi	r17, 0x01	; 1
 21e:	61 f4       	brne	.+24     	; 0x238 <DIO_init+0xce>
					set_bit(DDRC, pinNumber);
 220:	24 b3       	in	r18, 0x14	; 20
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_init+0xc2>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	ca 95       	dec	r28
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_init+0xbe>
 230:	82 2b       	or	r24, r18
 232:	84 bb       	out	0x14, r24	; 20
				else {
					clear_bit(DDRD, pinNumber);
					}
				break;
		}
	return DIO_OK;
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	2f c0       	rjmp	.+94     	; 0x296 <DIO_init+0x12c>
			case PORT_C:
				if (direction == OUT) {
					set_bit(DDRC, pinNumber);
					}
				else {
					clear_bit(DDRC, pinNumber);
 238:	24 b3       	in	r18, 0x14	; 20
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <DIO_init+0xda>
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	ca 95       	dec	r28
 246:	e2 f7       	brpl	.-8      	; 0x240 <DIO_init+0xd6>
 248:	80 95       	com	r24
 24a:	82 23       	and	r24, r18
 24c:	84 bb       	out	0x14, r24	; 20
				else {
					clear_bit(DDRD, pinNumber);
					}
				break;
		}
	return DIO_OK;
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	22 c0       	rjmp	.+68     	; 0x296 <DIO_init+0x12c>
				else {
					clear_bit(DDRC, pinNumber);
					}
				break;
			case PORT_D:
				if (direction == OUT) {
 252:	11 30       	cpi	r17, 0x01	; 1
 254:	61 f4       	brne	.+24     	; 0x26e <DIO_init+0x104>
					set_bit(DDRD, pinNumber);
 256:	21 b3       	in	r18, 0x11	; 17
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_init+0xf8>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	ca 95       	dec	r28
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_init+0xf4>
 266:	82 2b       	or	r24, r18
 268:	81 bb       	out	0x11, r24	; 17
				else {
					clear_bit(DDRD, pinNumber);
					}
				break;
		}
	return DIO_OK;
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	14 c0       	rjmp	.+40     	; 0x296 <DIO_init+0x12c>
			case PORT_D:
				if (direction == OUT) {
					set_bit(DDRD, pinNumber);
					}
				else {
					clear_bit(DDRD, pinNumber);
 26e:	21 b3       	in	r18, 0x11	; 17
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_init+0x110>
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	ca 95       	dec	r28
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_init+0x10c>
 27e:	80 95       	com	r24
 280:	82 23       	and	r24, r18
 282:	81 bb       	out	0x11, r24	; 17
					}
				break;
		}
	return DIO_OK;
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	07 c0       	rjmp	.+14     	; 0x296 <DIO_init+0x12c>

// Initialize the pin direction
EN_dioError_t DIO_init(uint8_t pinNumber, uint8_t portNumber, uint8_t direction) {
	// Validate the pin number
	if (!isValidPinNumber(pinNumber)) {
		return WRONG_PIN;
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	05 c0       	rjmp	.+10     	; 0x296 <DIO_init+0x12c>
		}
	// Validate the port number
	if (!isValidPortNumber(portNumber)) {
		return WRONG_PORT;
 28c:	82 e0       	ldi	r24, 0x02	; 2
 28e:	03 c0       	rjmp	.+6      	; 0x296 <DIO_init+0x12c>
		}
	// Validate the direction
	if (!isValidDirection(direction)) {
		return WRONG_DIRECTION;
 290:	83 e0       	ldi	r24, 0x03	; 3
 292:	01 c0       	rjmp	.+2      	; 0x296 <DIO_init+0x12c>
				else {
					clear_bit(DDRD, pinNumber);
					}
				break;
		}
	return DIO_OK;
 294:	80 e0       	ldi	r24, 0x00	; 0
	}
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	1f 91       	pop	r17
 29c:	08 95       	ret

0000029e <isValidTimer>:
        clear_bit(TCCR2, COM21);
        set_prescalar(TIMER_2, PWM_PRESCALAR);
        break;
    }
  return TIMER_OK;
  }
 29e:	83 30       	cpi	r24, 0x03	; 3
 2a0:	10 f4       	brcc	.+4      	; 0x2a6 <isValidTimer+0x8>
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	08 95       	ret
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	08 95       	ret

000002aa <set_prescalar>:
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	18 2f       	mov	r17, r24
 2b2:	eb 01       	movw	r28, r22
 2b4:	0e 94 4f 01 	call	0x29e	; 0x29e <isValidTimer>
 2b8:	88 23       	and	r24, r24
 2ba:	09 f4       	brne	.+2      	; 0x2be <set_prescalar+0x14>
 2bc:	6a c1       	rjmp	.+724    	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
 2be:	11 30       	cpi	r17, 0x01	; 1
 2c0:	09 f4       	brne	.+2      	; 0x2c4 <set_prescalar+0x1a>
 2c2:	6f c0       	rjmp	.+222    	; 0x3a2 <set_prescalar+0xf8>
 2c4:	20 f0       	brcs	.+8      	; 0x2ce <set_prescalar+0x24>
 2c6:	12 30       	cpi	r17, 0x02	; 2
 2c8:	09 f4       	brne	.+2      	; 0x2cc <set_prescalar+0x22>
 2ca:	d5 c0       	rjmp	.+426    	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 2cc:	64 c1       	rjmp	.+712    	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
 2ce:	c2 30       	cpi	r28, 0x02	; 2
 2d0:	d1 05       	cpc	r29, r1
 2d2:	78 f0       	brcs	.+30     	; 0x2f2 <set_prescalar+0x48>
 2d4:	c8 30       	cpi	r28, 0x08	; 8
 2d6:	d1 05       	cpc	r29, r1
 2d8:	61 f0       	breq	.+24     	; 0x2f2 <set_prescalar+0x48>
 2da:	c0 34       	cpi	r28, 0x40	; 64
 2dc:	d1 05       	cpc	r29, r1
 2de:	49 f0       	breq	.+18     	; 0x2f2 <set_prescalar+0x48>
 2e0:	c1 15       	cp	r28, r1
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	d8 07       	cpc	r29, r24
 2e6:	29 f0       	breq	.+10     	; 0x2f2 <set_prescalar+0x48>
 2e8:	c1 15       	cp	r28, r1
 2ea:	84 e0       	ldi	r24, 0x04	; 4
 2ec:	d8 07       	cpc	r29, r24
 2ee:	09 f0       	breq	.+2      	; 0x2f2 <set_prescalar+0x48>
 2f0:	54 c1       	rjmp	.+680    	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 2f2:	c8 30       	cpi	r28, 0x08	; 8
 2f4:	d1 05       	cpc	r29, r1
 2f6:	49 f1       	breq	.+82     	; 0x34a <set_prescalar+0xa0>
 2f8:	28 f4       	brcc	.+10     	; 0x304 <set_prescalar+0x5a>
 2fa:	20 97       	sbiw	r28, 0x00	; 0
 2fc:	81 f0       	breq	.+32     	; 0x31e <set_prescalar+0x74>
 2fe:	21 97       	sbiw	r28, 0x01	; 1
 300:	c9 f0       	breq	.+50     	; 0x334 <set_prescalar+0x8a>
 302:	4d c1       	rjmp	.+666    	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 304:	c1 15       	cp	r28, r1
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	d8 07       	cpc	r29, r24
 30a:	a9 f1       	breq	.+106    	; 0x376 <set_prescalar+0xcc>
 30c:	c1 15       	cp	r28, r1
 30e:	84 e0       	ldi	r24, 0x04	; 4
 310:	d8 07       	cpc	r29, r24
 312:	e1 f1       	breq	.+120    	; 0x38c <set_prescalar+0xe2>
 314:	c0 34       	cpi	r28, 0x40	; 64
 316:	d1 05       	cpc	r29, r1
 318:	09 f0       	breq	.+2      	; 0x31c <set_prescalar+0x72>
 31a:	41 c1       	rjmp	.+642    	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 31c:	21 c0       	rjmp	.+66     	; 0x360 <set_prescalar+0xb6>
 31e:	83 b7       	in	r24, 0x33	; 51
 320:	8e 7f       	andi	r24, 0xFE	; 254
 322:	83 bf       	out	0x33, r24	; 51
 324:	83 b7       	in	r24, 0x33	; 51
 326:	8d 7f       	andi	r24, 0xFD	; 253
 328:	83 bf       	out	0x33, r24	; 51
 32a:	83 b7       	in	r24, 0x33	; 51
 32c:	8b 7f       	andi	r24, 0xFB	; 251
 32e:	83 bf       	out	0x33, r24	; 51
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	3e c1       	rjmp	.+636    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 334:	83 b7       	in	r24, 0x33	; 51
 336:	81 60       	ori	r24, 0x01	; 1
 338:	83 bf       	out	0x33, r24	; 51
 33a:	83 b7       	in	r24, 0x33	; 51
 33c:	8d 7f       	andi	r24, 0xFD	; 253
 33e:	83 bf       	out	0x33, r24	; 51
 340:	83 b7       	in	r24, 0x33	; 51
 342:	8b 7f       	andi	r24, 0xFB	; 251
 344:	83 bf       	out	0x33, r24	; 51
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	33 c1       	rjmp	.+614    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 34a:	83 b7       	in	r24, 0x33	; 51
 34c:	8e 7f       	andi	r24, 0xFE	; 254
 34e:	83 bf       	out	0x33, r24	; 51
 350:	83 b7       	in	r24, 0x33	; 51
 352:	82 60       	ori	r24, 0x02	; 2
 354:	83 bf       	out	0x33, r24	; 51
 356:	83 b7       	in	r24, 0x33	; 51
 358:	8b 7f       	andi	r24, 0xFB	; 251
 35a:	83 bf       	out	0x33, r24	; 51
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	28 c1       	rjmp	.+592    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 360:	83 b7       	in	r24, 0x33	; 51
 362:	81 60       	ori	r24, 0x01	; 1
 364:	83 bf       	out	0x33, r24	; 51
 366:	83 b7       	in	r24, 0x33	; 51
 368:	82 60       	ori	r24, 0x02	; 2
 36a:	83 bf       	out	0x33, r24	; 51
 36c:	83 b7       	in	r24, 0x33	; 51
 36e:	8b 7f       	andi	r24, 0xFB	; 251
 370:	83 bf       	out	0x33, r24	; 51
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	1d c1       	rjmp	.+570    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 376:	83 b7       	in	r24, 0x33	; 51
 378:	8e 7f       	andi	r24, 0xFE	; 254
 37a:	83 bf       	out	0x33, r24	; 51
 37c:	83 b7       	in	r24, 0x33	; 51
 37e:	8d 7f       	andi	r24, 0xFD	; 253
 380:	83 bf       	out	0x33, r24	; 51
 382:	83 b7       	in	r24, 0x33	; 51
 384:	84 60       	ori	r24, 0x04	; 4
 386:	83 bf       	out	0x33, r24	; 51
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	12 c1       	rjmp	.+548    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 38c:	83 b7       	in	r24, 0x33	; 51
 38e:	81 60       	ori	r24, 0x01	; 1
 390:	83 bf       	out	0x33, r24	; 51
 392:	83 b7       	in	r24, 0x33	; 51
 394:	8d 7f       	andi	r24, 0xFD	; 253
 396:	83 bf       	out	0x33, r24	; 51
 398:	83 b7       	in	r24, 0x33	; 51
 39a:	84 60       	ori	r24, 0x04	; 4
 39c:	83 bf       	out	0x33, r24	; 51
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	07 c1       	rjmp	.+526    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 3a2:	c2 30       	cpi	r28, 0x02	; 2
 3a4:	d1 05       	cpc	r29, r1
 3a6:	78 f0       	brcs	.+30     	; 0x3c6 <set_prescalar+0x11c>
 3a8:	c8 30       	cpi	r28, 0x08	; 8
 3aa:	d1 05       	cpc	r29, r1
 3ac:	61 f0       	breq	.+24     	; 0x3c6 <set_prescalar+0x11c>
 3ae:	c0 34       	cpi	r28, 0x40	; 64
 3b0:	d1 05       	cpc	r29, r1
 3b2:	49 f0       	breq	.+18     	; 0x3c6 <set_prescalar+0x11c>
 3b4:	c1 15       	cp	r28, r1
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	d8 07       	cpc	r29, r24
 3ba:	29 f0       	breq	.+10     	; 0x3c6 <set_prescalar+0x11c>
 3bc:	c1 15       	cp	r28, r1
 3be:	84 e0       	ldi	r24, 0x04	; 4
 3c0:	d8 07       	cpc	r29, r24
 3c2:	09 f0       	breq	.+2      	; 0x3c6 <set_prescalar+0x11c>
 3c4:	ee c0       	rjmp	.+476    	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 3c6:	c8 30       	cpi	r28, 0x08	; 8
 3c8:	d1 05       	cpc	r29, r1
 3ca:	49 f1       	breq	.+82     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3cc:	28 f4       	brcc	.+10     	; 0x3d8 <set_prescalar+0x12e>
 3ce:	20 97       	sbiw	r28, 0x00	; 0
 3d0:	81 f0       	breq	.+32     	; 0x3f2 <set_prescalar+0x148>
 3d2:	21 97       	sbiw	r28, 0x01	; 1
 3d4:	c9 f0       	breq	.+50     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3d6:	e7 c0       	rjmp	.+462    	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 3d8:	c1 15       	cp	r28, r1
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	d8 07       	cpc	r29, r24
 3de:	a9 f1       	breq	.+106    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 3e0:	c1 15       	cp	r28, r1
 3e2:	84 e0       	ldi	r24, 0x04	; 4
 3e4:	d8 07       	cpc	r29, r24
 3e6:	e1 f1       	breq	.+120    	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 3e8:	c0 34       	cpi	r28, 0x40	; 64
 3ea:	d1 05       	cpc	r29, r1
 3ec:	09 f0       	breq	.+2      	; 0x3f0 <set_prescalar+0x146>
 3ee:	db c0       	rjmp	.+438    	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 3f0:	21 c0       	rjmp	.+66     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 3f2:	8e b5       	in	r24, 0x2e	; 46
 3f4:	8e 7f       	andi	r24, 0xFE	; 254
 3f6:	8e bd       	out	0x2e, r24	; 46
 3f8:	8e b5       	in	r24, 0x2e	; 46
 3fa:	8d 7f       	andi	r24, 0xFD	; 253
 3fc:	8e bd       	out	0x2e, r24	; 46
 3fe:	8e b5       	in	r24, 0x2e	; 46
 400:	8b 7f       	andi	r24, 0xFB	; 251
 402:	8e bd       	out	0x2e, r24	; 46
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	d4 c0       	rjmp	.+424    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 408:	8e b5       	in	r24, 0x2e	; 46
 40a:	81 60       	ori	r24, 0x01	; 1
 40c:	8e bd       	out	0x2e, r24	; 46
 40e:	8e b5       	in	r24, 0x2e	; 46
 410:	8d 7f       	andi	r24, 0xFD	; 253
 412:	8e bd       	out	0x2e, r24	; 46
 414:	8e b5       	in	r24, 0x2e	; 46
 416:	8b 7f       	andi	r24, 0xFB	; 251
 418:	8e bd       	out	0x2e, r24	; 46
 41a:	80 e0       	ldi	r24, 0x00	; 0
 41c:	c9 c0       	rjmp	.+402    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 41e:	8e b5       	in	r24, 0x2e	; 46
 420:	8e 7f       	andi	r24, 0xFE	; 254
 422:	8e bd       	out	0x2e, r24	; 46
 424:	8e b5       	in	r24, 0x2e	; 46
 426:	82 60       	ori	r24, 0x02	; 2
 428:	8e bd       	out	0x2e, r24	; 46
 42a:	8e b5       	in	r24, 0x2e	; 46
 42c:	8b 7f       	andi	r24, 0xFB	; 251
 42e:	8e bd       	out	0x2e, r24	; 46
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	be c0       	rjmp	.+380    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 434:	8e b5       	in	r24, 0x2e	; 46
 436:	81 60       	ori	r24, 0x01	; 1
 438:	8e bd       	out	0x2e, r24	; 46
 43a:	8e b5       	in	r24, 0x2e	; 46
 43c:	82 60       	ori	r24, 0x02	; 2
 43e:	8e bd       	out	0x2e, r24	; 46
 440:	8e b5       	in	r24, 0x2e	; 46
 442:	8b 7f       	andi	r24, 0xFB	; 251
 444:	8e bd       	out	0x2e, r24	; 46
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	b3 c0       	rjmp	.+358    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 44a:	8e b5       	in	r24, 0x2e	; 46
 44c:	8e 7f       	andi	r24, 0xFE	; 254
 44e:	8e bd       	out	0x2e, r24	; 46
 450:	8e b5       	in	r24, 0x2e	; 46
 452:	8d 7f       	andi	r24, 0xFD	; 253
 454:	8e bd       	out	0x2e, r24	; 46
 456:	8e b5       	in	r24, 0x2e	; 46
 458:	84 60       	ori	r24, 0x04	; 4
 45a:	8e bd       	out	0x2e, r24	; 46
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	a8 c0       	rjmp	.+336    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 460:	8e b5       	in	r24, 0x2e	; 46
 462:	81 60       	ori	r24, 0x01	; 1
 464:	8e bd       	out	0x2e, r24	; 46
 466:	8e b5       	in	r24, 0x2e	; 46
 468:	8d 7f       	andi	r24, 0xFD	; 253
 46a:	8e bd       	out	0x2e, r24	; 46
 46c:	8e b5       	in	r24, 0x2e	; 46
 46e:	84 60       	ori	r24, 0x04	; 4
 470:	8e bd       	out	0x2e, r24	; 46
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	9d c0       	rjmp	.+314    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 476:	c2 30       	cpi	r28, 0x02	; 2
 478:	d1 05       	cpc	r29, r1
 47a:	a8 f0       	brcs	.+42     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 47c:	c8 30       	cpi	r28, 0x08	; 8
 47e:	d1 05       	cpc	r29, r1
 480:	91 f0       	breq	.+36     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 482:	c0 32       	cpi	r28, 0x20	; 32
 484:	d1 05       	cpc	r29, r1
 486:	79 f0       	breq	.+30     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 488:	c0 34       	cpi	r28, 0x40	; 64
 48a:	d1 05       	cpc	r29, r1
 48c:	61 f0       	breq	.+24     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 48e:	c0 38       	cpi	r28, 0x80	; 128
 490:	d1 05       	cpc	r29, r1
 492:	49 f0       	breq	.+18     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 494:	c1 15       	cp	r28, r1
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	d8 07       	cpc	r29, r24
 49a:	29 f0       	breq	.+10     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 49c:	c1 15       	cp	r28, r1
 49e:	84 e0       	ldi	r24, 0x04	; 4
 4a0:	d8 07       	cpc	r29, r24
 4a2:	09 f0       	breq	.+2      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a4:	82 c0       	rjmp	.+260    	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 4a6:	c0 32       	cpi	r28, 0x20	; 32
 4a8:	d1 05       	cpc	r29, r1
 4aa:	e1 f1       	breq	.+120    	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 4ac:	38 f4       	brcc	.+14     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 4ae:	c1 30       	cpi	r28, 0x01	; 1
 4b0:	d1 05       	cpc	r29, r1
 4b2:	11 f1       	breq	.+68     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4b4:	b0 f0       	brcs	.+44     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4b6:	28 97       	sbiw	r28, 0x08	; 8
 4b8:	51 f1       	breq	.+84     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4ba:	79 c0       	rjmp	.+242    	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 4bc:	c0 38       	cpi	r28, 0x80	; 128
 4be:	d1 05       	cpc	r29, r1
 4c0:	09 f4       	brne	.+2      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4c2:	46 c0       	rjmp	.+140    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 4c4:	20 f4       	brcc	.+8      	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4c6:	c0 34       	cpi	r28, 0x40	; 64
 4c8:	d1 05       	cpc	r29, r1
 4ca:	b9 f1       	breq	.+110    	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
 4cc:	70 c0       	rjmp	.+224    	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 4ce:	c1 15       	cp	r28, r1
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	d8 07       	cpc	r29, r24
 4d4:	09 f4       	brne	.+2      	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 4d6:	47 c0       	rjmp	.+142    	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
 4d8:	c1 15       	cp	r28, r1
 4da:	d4 40       	sbci	r29, 0x04	; 4
 4dc:	09 f4       	brne	.+2      	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 4de:	4e c0       	rjmp	.+156    	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 4e0:	66 c0       	rjmp	.+204    	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 4e2:	85 b5       	in	r24, 0x25	; 37
 4e4:	8e 7f       	andi	r24, 0xFE	; 254
 4e6:	85 bd       	out	0x25, r24	; 37
 4e8:	85 b5       	in	r24, 0x25	; 37
 4ea:	8d 7f       	andi	r24, 0xFD	; 253
 4ec:	85 bd       	out	0x25, r24	; 37
 4ee:	85 b5       	in	r24, 0x25	; 37
 4f0:	8b 7f       	andi	r24, 0xFB	; 251
 4f2:	85 bd       	out	0x25, r24	; 37
 4f4:	80 e0       	ldi	r24, 0x00	; 0
 4f6:	5c c0       	rjmp	.+184    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 4f8:	85 b5       	in	r24, 0x25	; 37
 4fa:	81 60       	ori	r24, 0x01	; 1
 4fc:	85 bd       	out	0x25, r24	; 37
 4fe:	85 b5       	in	r24, 0x25	; 37
 500:	8d 7f       	andi	r24, 0xFD	; 253
 502:	85 bd       	out	0x25, r24	; 37
 504:	85 b5       	in	r24, 0x25	; 37
 506:	8b 7f       	andi	r24, 0xFB	; 251
 508:	85 bd       	out	0x25, r24	; 37
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	51 c0       	rjmp	.+162    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 50e:	85 b5       	in	r24, 0x25	; 37
 510:	8e 7f       	andi	r24, 0xFE	; 254
 512:	85 bd       	out	0x25, r24	; 37
 514:	85 b5       	in	r24, 0x25	; 37
 516:	82 60       	ori	r24, 0x02	; 2
 518:	85 bd       	out	0x25, r24	; 37
 51a:	85 b5       	in	r24, 0x25	; 37
 51c:	8b 7f       	andi	r24, 0xFB	; 251
 51e:	85 bd       	out	0x25, r24	; 37
 520:	80 e0       	ldi	r24, 0x00	; 0
 522:	46 c0       	rjmp	.+140    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 524:	85 b5       	in	r24, 0x25	; 37
 526:	81 60       	ori	r24, 0x01	; 1
 528:	85 bd       	out	0x25, r24	; 37
 52a:	85 b5       	in	r24, 0x25	; 37
 52c:	82 60       	ori	r24, 0x02	; 2
 52e:	85 bd       	out	0x25, r24	; 37
 530:	85 b5       	in	r24, 0x25	; 37
 532:	8b 7f       	andi	r24, 0xFB	; 251
 534:	85 bd       	out	0x25, r24	; 37
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	3b c0       	rjmp	.+118    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 53a:	85 b5       	in	r24, 0x25	; 37
 53c:	8e 7f       	andi	r24, 0xFE	; 254
 53e:	85 bd       	out	0x25, r24	; 37
 540:	85 b5       	in	r24, 0x25	; 37
 542:	8d 7f       	andi	r24, 0xFD	; 253
 544:	85 bd       	out	0x25, r24	; 37
 546:	85 b5       	in	r24, 0x25	; 37
 548:	84 60       	ori	r24, 0x04	; 4
 54a:	85 bd       	out	0x25, r24	; 37
 54c:	80 e0       	ldi	r24, 0x00	; 0
 54e:	30 c0       	rjmp	.+96     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 550:	85 b5       	in	r24, 0x25	; 37
 552:	81 60       	ori	r24, 0x01	; 1
 554:	85 bd       	out	0x25, r24	; 37
 556:	85 b5       	in	r24, 0x25	; 37
 558:	8d 7f       	andi	r24, 0xFD	; 253
 55a:	85 bd       	out	0x25, r24	; 37
 55c:	85 b5       	in	r24, 0x25	; 37
 55e:	84 60       	ori	r24, 0x04	; 4
 560:	85 bd       	out	0x25, r24	; 37
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	25 c0       	rjmp	.+74     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 566:	85 b5       	in	r24, 0x25	; 37
 568:	8e 7f       	andi	r24, 0xFE	; 254
 56a:	85 bd       	out	0x25, r24	; 37
 56c:	85 b5       	in	r24, 0x25	; 37
 56e:	82 60       	ori	r24, 0x02	; 2
 570:	85 bd       	out	0x25, r24	; 37
 572:	85 b5       	in	r24, 0x25	; 37
 574:	84 60       	ori	r24, 0x04	; 4
 576:	85 bd       	out	0x25, r24	; 37
 578:	80 e0       	ldi	r24, 0x00	; 0
 57a:	1a c0       	rjmp	.+52     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 57c:	85 b5       	in	r24, 0x25	; 37
 57e:	81 60       	ori	r24, 0x01	; 1
 580:	85 bd       	out	0x25, r24	; 37
 582:	85 b5       	in	r24, 0x25	; 37
 584:	82 60       	ori	r24, 0x02	; 2
 586:	85 bd       	out	0x25, r24	; 37
 588:	85 b5       	in	r24, 0x25	; 37
 58a:	84 60       	ori	r24, 0x04	; 4
 58c:	85 bd       	out	0x25, r24	; 37
 58e:	80 e0       	ldi	r24, 0x00	; 0
 590:	0f c0       	rjmp	.+30     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	0d c0       	rjmp	.+26     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 596:	80 e0       	ldi	r24, 0x00	; 0
 598:	0b c0       	rjmp	.+22     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 59a:	82 e0       	ldi	r24, 0x02	; 2
 59c:	09 c0       	rjmp	.+18     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 59e:	80 e0       	ldi	r24, 0x00	; 0
 5a0:	07 c0       	rjmp	.+14     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5a2:	82 e0       	ldi	r24, 0x02	; 2
 5a4:	05 c0       	rjmp	.+10     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5a6:	80 e0       	ldi	r24, 0x00	; 0
 5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5aa:	82 e0       	ldi	r24, 0x02	; 2
 5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5ae:	80 e0       	ldi	r24, 0x00	; 0
 5b0:	df 91       	pop	r29
 5b2:	cf 91       	pop	r28
 5b4:	1f 91       	pop	r17
 5b6:	08 95       	ret

000005b8 <Timer_start>:
 5b8:	0f 93       	push	r16
 5ba:	1f 93       	push	r17
 5bc:	cf 93       	push	r28
 5be:	c8 2f       	mov	r28, r24
 5c0:	8b 01       	movw	r16, r22
 5c2:	0e 94 4f 01 	call	0x29e	; 0x29e <isValidTimer>
 5c6:	88 23       	and	r24, r24
 5c8:	31 f0       	breq	.+12     	; 0x5d6 <Timer_start+0x1e>
 5ca:	b8 01       	movw	r22, r16
 5cc:	8c 2f       	mov	r24, r28
 5ce:	0e 94 55 01 	call	0x2aa	; 0x2aa <set_prescalar>
 5d2:	80 e0       	ldi	r24, 0x00	; 0
 5d4:	01 c0       	rjmp	.+2      	; 0x5d8 <Timer_start+0x20>
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	cf 91       	pop	r28
 5da:	1f 91       	pop	r17
 5dc:	0f 91       	pop	r16
 5de:	08 95       	ret

000005e0 <PWM_init>:
 5e0:	cf 92       	push	r12
 5e2:	df 92       	push	r13
 5e4:	ef 92       	push	r14
 5e6:	ff 92       	push	r15
 5e8:	84 30       	cpi	r24, 0x04	; 4
 5ea:	08 f0       	brcs	.+2      	; 0x5ee <PWM_init+0xe>
 5ec:	ad c0       	rjmp	.+346    	; 0x748 <PWM_init+0x168>
 5ee:	9f ef       	ldi	r25, 0xFF	; 255
 5f0:	92 0f       	add	r25, r18
 5f2:	92 30       	cpi	r25, 0x02	; 2
 5f4:	08 f0       	brcs	.+2      	; 0x5f8 <PWM_init+0x18>
 5f6:	aa c0       	rjmp	.+340    	; 0x74c <PWM_init+0x16c>
 5f8:	6a 01       	movw	r12, r20
 5fa:	7b 01       	movw	r14, r22
 5fc:	83 30       	cpi	r24, 0x03	; 3
 5fe:	18 f4       	brcc	.+6      	; 0x606 <PWM_init+0x26>
 600:	81 30       	cpi	r24, 0x01	; 1
 602:	28 f0       	brcs	.+10     	; 0x60e <PWM_init+0x2e>
 604:	29 c0       	rjmp	.+82     	; 0x658 <PWM_init+0x78>
 606:	83 30       	cpi	r24, 0x03	; 3
 608:	09 f4       	brne	.+2      	; 0x60c <PWM_init+0x2c>
 60a:	79 c0       	rjmp	.+242    	; 0x6fe <PWM_init+0x11e>
 60c:	a1 c0       	rjmp	.+322    	; 0x750 <PWM_init+0x170>
 60e:	21 30       	cpi	r18, 0x01	; 1
 610:	19 f0       	breq	.+6      	; 0x618 <PWM_init+0x38>
 612:	22 30       	cpi	r18, 0x02	; 2
 614:	41 f0       	breq	.+16     	; 0x626 <PWM_init+0x46>
 616:	0d c0       	rjmp	.+26     	; 0x632 <PWM_init+0x52>
 618:	83 b7       	in	r24, 0x33	; 51
 61a:	80 64       	ori	r24, 0x40	; 64
 61c:	83 bf       	out	0x33, r24	; 51
 61e:	83 b7       	in	r24, 0x33	; 51
 620:	88 60       	ori	r24, 0x08	; 8
 622:	83 bf       	out	0x33, r24	; 51
 624:	06 c0       	rjmp	.+12     	; 0x632 <PWM_init+0x52>
 626:	83 b7       	in	r24, 0x33	; 51
 628:	80 64       	ori	r24, 0x40	; 64
 62a:	83 bf       	out	0x33, r24	; 51
 62c:	83 b7       	in	r24, 0x33	; 51
 62e:	87 7f       	andi	r24, 0xF7	; 247
 630:	83 bf       	out	0x33, r24	; 51
 632:	83 b7       	in	r24, 0x33	; 51
 634:	8f 7e       	andi	r24, 0xEF	; 239
 636:	83 bf       	out	0x33, r24	; 51
 638:	83 b7       	in	r24, 0x33	; 51
 63a:	80 62       	ori	r24, 0x20	; 32
 63c:	83 bf       	out	0x33, r24	; 51
 63e:	20 e0       	ldi	r18, 0x00	; 0
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	4f e7       	ldi	r20, 0x7F	; 127
 644:	53 e4       	ldi	r21, 0x43	; 67
 646:	c7 01       	movw	r24, r14
 648:	b6 01       	movw	r22, r12
 64a:	0e 94 8b 05 	call	0xb16	; 0xb16 <__mulsf3>
 64e:	0e 94 ce 04 	call	0x99c	; 0x99c <__fixunssfsi>
 652:	6c bf       	out	0x3c, r22	; 60
 654:	80 e0       	ldi	r24, 0x00	; 0
 656:	7f c0       	rjmp	.+254    	; 0x756 <PWM_init+0x176>
 658:	21 30       	cpi	r18, 0x01	; 1
 65a:	19 f0       	breq	.+6      	; 0x662 <PWM_init+0x82>
 65c:	22 30       	cpi	r18, 0x02	; 2
 65e:	91 f0       	breq	.+36     	; 0x684 <PWM_init+0xa4>
 660:	21 c0       	rjmp	.+66     	; 0x6a4 <PWM_init+0xc4>
 662:	9f b5       	in	r25, 0x2f	; 47
 664:	9e 7f       	andi	r25, 0xFE	; 254
 666:	9f bd       	out	0x2f, r25	; 47
 668:	9f b5       	in	r25, 0x2f	; 47
 66a:	92 60       	ori	r25, 0x02	; 2
 66c:	9f bd       	out	0x2f, r25	; 47
 66e:	9e b5       	in	r25, 0x2e	; 46
 670:	98 60       	ori	r25, 0x08	; 8
 672:	9e bd       	out	0x2e, r25	; 46
 674:	9e b5       	in	r25, 0x2e	; 46
 676:	90 61       	ori	r25, 0x10	; 16
 678:	9e bd       	out	0x2e, r25	; 46
 67a:	2f ef       	ldi	r18, 0xFF	; 255
 67c:	3f ef       	ldi	r19, 0xFF	; 255
 67e:	37 bd       	out	0x27, r19	; 39
 680:	26 bd       	out	0x26, r18	; 38
 682:	10 c0       	rjmp	.+32     	; 0x6a4 <PWM_init+0xc4>
 684:	9f b5       	in	r25, 0x2f	; 47
 686:	9e 7f       	andi	r25, 0xFE	; 254
 688:	9f bd       	out	0x2f, r25	; 47
 68a:	9f b5       	in	r25, 0x2f	; 47
 68c:	92 60       	ori	r25, 0x02	; 2
 68e:	9f bd       	out	0x2f, r25	; 47
 690:	9e b5       	in	r25, 0x2e	; 46
 692:	97 7f       	andi	r25, 0xF7	; 247
 694:	9e bd       	out	0x2e, r25	; 46
 696:	9e b5       	in	r25, 0x2e	; 46
 698:	90 61       	ori	r25, 0x10	; 16
 69a:	9e bd       	out	0x2e, r25	; 46
 69c:	20 e2       	ldi	r18, 0x20	; 32
 69e:	3e e4       	ldi	r19, 0x4E	; 78
 6a0:	37 bd       	out	0x27, r19	; 39
 6a2:	26 bd       	out	0x26, r18	; 38
 6a4:	81 30       	cpi	r24, 0x01	; 1
 6a6:	19 f0       	breq	.+6      	; 0x6ae <PWM_init+0xce>
 6a8:	82 30       	cpi	r24, 0x02	; 2
 6aa:	a9 f0       	breq	.+42     	; 0x6d6 <PWM_init+0xf6>
 6ac:	53 c0       	rjmp	.+166    	; 0x754 <PWM_init+0x174>
 6ae:	8f b5       	in	r24, 0x2f	; 47
 6b0:	8f 7b       	andi	r24, 0xBF	; 191
 6b2:	8f bd       	out	0x2f, r24	; 47
 6b4:	8f b5       	in	r24, 0x2f	; 47
 6b6:	80 68       	ori	r24, 0x80	; 128
 6b8:	8f bd       	out	0x2f, r24	; 47
 6ba:	20 e0       	ldi	r18, 0x00	; 0
 6bc:	3f ef       	ldi	r19, 0xFF	; 255
 6be:	4f e7       	ldi	r20, 0x7F	; 127
 6c0:	57 e4       	ldi	r21, 0x47	; 71
 6c2:	c7 01       	movw	r24, r14
 6c4:	b6 01       	movw	r22, r12
 6c6:	0e 94 8b 05 	call	0xb16	; 0xb16 <__mulsf3>
 6ca:	0e 94 ce 04 	call	0x99c	; 0x99c <__fixunssfsi>
 6ce:	7b bd       	out	0x2b, r23	; 43
 6d0:	6a bd       	out	0x2a, r22	; 42
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	40 c0       	rjmp	.+128    	; 0x756 <PWM_init+0x176>
 6d6:	8f b5       	in	r24, 0x2f	; 47
 6d8:	8f 7e       	andi	r24, 0xEF	; 239
 6da:	8f bd       	out	0x2f, r24	; 47
 6dc:	8f b5       	in	r24, 0x2f	; 47
 6de:	80 62       	ori	r24, 0x20	; 32
 6e0:	8f bd       	out	0x2f, r24	; 47
 6e2:	20 e0       	ldi	r18, 0x00	; 0
 6e4:	3f ef       	ldi	r19, 0xFF	; 255
 6e6:	4f e7       	ldi	r20, 0x7F	; 127
 6e8:	57 e4       	ldi	r21, 0x47	; 71
 6ea:	c7 01       	movw	r24, r14
 6ec:	b6 01       	movw	r22, r12
 6ee:	0e 94 8b 05 	call	0xb16	; 0xb16 <__mulsf3>
 6f2:	0e 94 ce 04 	call	0x99c	; 0x99c <__fixunssfsi>
 6f6:	79 bd       	out	0x29, r23	; 41
 6f8:	68 bd       	out	0x28, r22	; 40
 6fa:	80 e0       	ldi	r24, 0x00	; 0
 6fc:	2c c0       	rjmp	.+88     	; 0x756 <PWM_init+0x176>
 6fe:	21 30       	cpi	r18, 0x01	; 1
 700:	19 f0       	breq	.+6      	; 0x708 <PWM_init+0x128>
 702:	22 30       	cpi	r18, 0x02	; 2
 704:	41 f0       	breq	.+16     	; 0x716 <PWM_init+0x136>
 706:	0d c0       	rjmp	.+26     	; 0x722 <PWM_init+0x142>
 708:	85 b5       	in	r24, 0x25	; 37
 70a:	80 64       	ori	r24, 0x40	; 64
 70c:	85 bd       	out	0x25, r24	; 37
 70e:	85 b5       	in	r24, 0x25	; 37
 710:	88 60       	ori	r24, 0x08	; 8
 712:	85 bd       	out	0x25, r24	; 37
 714:	06 c0       	rjmp	.+12     	; 0x722 <PWM_init+0x142>
 716:	85 b5       	in	r24, 0x25	; 37
 718:	80 64       	ori	r24, 0x40	; 64
 71a:	85 bd       	out	0x25, r24	; 37
 71c:	85 b5       	in	r24, 0x25	; 37
 71e:	87 7f       	andi	r24, 0xF7	; 247
 720:	85 bd       	out	0x25, r24	; 37
 722:	85 b5       	in	r24, 0x25	; 37
 724:	8f 7e       	andi	r24, 0xEF	; 239
 726:	85 bd       	out	0x25, r24	; 37
 728:	85 b5       	in	r24, 0x25	; 37
 72a:	80 62       	ori	r24, 0x20	; 32
 72c:	85 bd       	out	0x25, r24	; 37
 72e:	20 e0       	ldi	r18, 0x00	; 0
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	4f e7       	ldi	r20, 0x7F	; 127
 734:	53 e4       	ldi	r21, 0x43	; 67
 736:	c7 01       	movw	r24, r14
 738:	b6 01       	movw	r22, r12
 73a:	0e 94 8b 05 	call	0xb16	; 0xb16 <__mulsf3>
 73e:	0e 94 ce 04 	call	0x99c	; 0x99c <__fixunssfsi>
 742:	63 bd       	out	0x23, r22	; 35
 744:	80 e0       	ldi	r24, 0x00	; 0
 746:	07 c0       	rjmp	.+14     	; 0x756 <PWM_init+0x176>
 748:	86 e0       	ldi	r24, 0x06	; 6
 74a:	05 c0       	rjmp	.+10     	; 0x756 <PWM_init+0x176>
 74c:	85 e0       	ldi	r24, 0x05	; 5
 74e:	03 c0       	rjmp	.+6      	; 0x756 <PWM_init+0x176>
 750:	80 e0       	ldi	r24, 0x00	; 0
 752:	01 c0       	rjmp	.+2      	; 0x756 <PWM_init+0x176>
 754:	80 e0       	ldi	r24, 0x00	; 0
 756:	ff 90       	pop	r15
 758:	ef 90       	pop	r14
 75a:	df 90       	pop	r13
 75c:	cf 90       	pop	r12
 75e:	08 95       	ret

00000760 <PWM_set_DC>:

// Change the duty cycle of a timer
EN_timerError_t PWM_set_DC(uint8_t pwmPin, double dutyCycle) {
 760:	28 2f       	mov	r18, r24
  if (pwmPin != OC_0 && pwmPin != OC_1A && pwmPin != OC_1B && pwmPin != OC_2) {
 762:	84 30       	cpi	r24, 0x04	; 4
 764:	c0 f5       	brcc	.+112    	; 0x7d6 <PWM_set_DC+0x76>
 766:	cb 01       	movw	r24, r22
 768:	ba 01       	movw	r22, r20
    return WRONG_PWM_PIN;
    }
  switch (pwmPin) {
 76a:	21 30       	cpi	r18, 0x01	; 1
 76c:	89 f0       	breq	.+34     	; 0x790 <PWM_set_DC+0x30>
 76e:	28 f0       	brcs	.+10     	; 0x77a <PWM_set_DC+0x1a>
 770:	22 30       	cpi	r18, 0x02	; 2
 772:	d1 f0       	breq	.+52     	; 0x7a8 <PWM_set_DC+0x48>
 774:	23 30       	cpi	r18, 0x03	; 3
 776:	21 f1       	breq	.+72     	; 0x7c0 <PWM_set_DC+0x60>
 778:	30 c0       	rjmp	.+96     	; 0x7da <PWM_set_DC+0x7a>
      case OC_0:
        OCR0 = (uint8_t)(dutyCycle * 255);
 77a:	20 e0       	ldi	r18, 0x00	; 0
 77c:	30 e0       	ldi	r19, 0x00	; 0
 77e:	4f e7       	ldi	r20, 0x7F	; 127
 780:	53 e4       	ldi	r21, 0x43	; 67
 782:	0e 94 8b 05 	call	0xb16	; 0xb16 <__mulsf3>
 786:	0e 94 ce 04 	call	0x99c	; 0x99c <__fixunssfsi>
 78a:	6c bf       	out	0x3c, r22	; 60
        break;
      case OC_2:
        OCR2 = (uint8_t)(dutyCycle * 255);
        break;
    }
  return TIMER_OK;
 78c:	80 e0       	ldi	r24, 0x00	; 0
    return WRONG_PWM_PIN;
    }
  switch (pwmPin) {
      case OC_0:
        OCR0 = (uint8_t)(dutyCycle * 255);
        break;
 78e:	08 95       	ret
      case OC_1A:
        OCR1A = (uint16_t)(dutyCycle * 65535);
 790:	20 e0       	ldi	r18, 0x00	; 0
 792:	3f ef       	ldi	r19, 0xFF	; 255
 794:	4f e7       	ldi	r20, 0x7F	; 127
 796:	57 e4       	ldi	r21, 0x47	; 71
 798:	0e 94 8b 05 	call	0xb16	; 0xb16 <__mulsf3>
 79c:	0e 94 ce 04 	call	0x99c	; 0x99c <__fixunssfsi>
 7a0:	7b bd       	out	0x2b, r23	; 43
 7a2:	6a bd       	out	0x2a, r22	; 42
        break;
      case OC_2:
        OCR2 = (uint8_t)(dutyCycle * 255);
        break;
    }
  return TIMER_OK;
 7a4:	80 e0       	ldi	r24, 0x00	; 0
      case OC_0:
        OCR0 = (uint8_t)(dutyCycle * 255);
        break;
      case OC_1A:
        OCR1A = (uint16_t)(dutyCycle * 65535);
        break;
 7a6:	08 95       	ret
      case OC_1B:
        OCR1B = (uint16_t)(dutyCycle * 65535);
 7a8:	20 e0       	ldi	r18, 0x00	; 0
 7aa:	3f ef       	ldi	r19, 0xFF	; 255
 7ac:	4f e7       	ldi	r20, 0x7F	; 127
 7ae:	57 e4       	ldi	r21, 0x47	; 71
 7b0:	0e 94 8b 05 	call	0xb16	; 0xb16 <__mulsf3>
 7b4:	0e 94 ce 04 	call	0x99c	; 0x99c <__fixunssfsi>
 7b8:	79 bd       	out	0x29, r23	; 41
 7ba:	68 bd       	out	0x28, r22	; 40
        break;
      case OC_2:
        OCR2 = (uint8_t)(dutyCycle * 255);
        break;
    }
  return TIMER_OK;
 7bc:	80 e0       	ldi	r24, 0x00	; 0
      case OC_1A:
        OCR1A = (uint16_t)(dutyCycle * 65535);
        break;
      case OC_1B:
        OCR1B = (uint16_t)(dutyCycle * 65535);
        break;
 7be:	08 95       	ret
      case OC_2:
        OCR2 = (uint8_t)(dutyCycle * 255);
 7c0:	20 e0       	ldi	r18, 0x00	; 0
 7c2:	30 e0       	ldi	r19, 0x00	; 0
 7c4:	4f e7       	ldi	r20, 0x7F	; 127
 7c6:	53 e4       	ldi	r21, 0x43	; 67
 7c8:	0e 94 8b 05 	call	0xb16	; 0xb16 <__mulsf3>
 7cc:	0e 94 ce 04 	call	0x99c	; 0x99c <__fixunssfsi>
 7d0:	63 bd       	out	0x23, r22	; 35
        break;
    }
  return TIMER_OK;
 7d2:	80 e0       	ldi	r24, 0x00	; 0
      case OC_1B:
        OCR1B = (uint16_t)(dutyCycle * 65535);
        break;
      case OC_2:
        OCR2 = (uint8_t)(dutyCycle * 255);
        break;
 7d4:	08 95       	ret
  }

// Change the duty cycle of a timer
EN_timerError_t PWM_set_DC(uint8_t pwmPin, double dutyCycle) {
  if (pwmPin != OC_0 && pwmPin != OC_1A && pwmPin != OC_1B && pwmPin != OC_2) {
    return WRONG_PWM_PIN;
 7d6:	86 e0       	ldi	r24, 0x06	; 6
 7d8:	08 95       	ret
        break;
      case OC_2:
        OCR2 = (uint8_t)(dutyCycle * 255);
        break;
    }
  return TIMER_OK;
 7da:	80 e0       	ldi	r24, 0x00	; 0
 7dc:	08 95       	ret

000007de <__subsf3>:
 7de:	50 58       	subi	r21, 0x80	; 128

000007e0 <__addsf3>:
 7e0:	bb 27       	eor	r27, r27
 7e2:	aa 27       	eor	r26, r26
 7e4:	0e 94 07 04 	call	0x80e	; 0x80e <__addsf3x>
 7e8:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__fp_round>
 7ec:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_pscA>
 7f0:	38 f0       	brcs	.+14     	; 0x800 <__DATA_REGION_LENGTH__>
 7f2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fp_pscB>
 7f6:	20 f0       	brcs	.+8      	; 0x800 <__DATA_REGION_LENGTH__>
 7f8:	39 f4       	brne	.+14     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7fa:	9f 3f       	cpi	r25, 0xFF	; 255
 7fc:	19 f4       	brne	.+6      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7fe:	26 f4       	brtc	.+8      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 800:	0c 94 40 05 	jmp	0xa80	; 0xa80 <__fp_nan>
 804:	0e f4       	brtc	.+2      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 806:	e0 95       	com	r30
 808:	e7 fb       	bst	r30, 7
 80a:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_inf>

0000080e <__addsf3x>:
 80e:	e9 2f       	mov	r30, r25
 810:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_split3>
 814:	58 f3       	brcs	.-42     	; 0x7ec <__addsf3+0xc>
 816:	ba 17       	cp	r27, r26
 818:	62 07       	cpc	r22, r18
 81a:	73 07       	cpc	r23, r19
 81c:	84 07       	cpc	r24, r20
 81e:	95 07       	cpc	r25, r21
 820:	20 f0       	brcs	.+8      	; 0x82a <__addsf3x+0x1c>
 822:	79 f4       	brne	.+30     	; 0x842 <__addsf3x+0x34>
 824:	a6 f5       	brtc	.+104    	; 0x88e <__stack+0x2f>
 826:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__fp_zero>
 82a:	0e f4       	brtc	.+2      	; 0x82e <__addsf3x+0x20>
 82c:	e0 95       	com	r30
 82e:	0b 2e       	mov	r0, r27
 830:	ba 2f       	mov	r27, r26
 832:	a0 2d       	mov	r26, r0
 834:	0b 01       	movw	r0, r22
 836:	b9 01       	movw	r22, r18
 838:	90 01       	movw	r18, r0
 83a:	0c 01       	movw	r0, r24
 83c:	ca 01       	movw	r24, r20
 83e:	a0 01       	movw	r20, r0
 840:	11 24       	eor	r1, r1
 842:	ff 27       	eor	r31, r31
 844:	59 1b       	sub	r21, r25
 846:	99 f0       	breq	.+38     	; 0x86e <__stack+0xf>
 848:	59 3f       	cpi	r21, 0xF9	; 249
 84a:	50 f4       	brcc	.+20     	; 0x860 <__stack+0x1>
 84c:	50 3e       	cpi	r21, 0xE0	; 224
 84e:	68 f1       	brcs	.+90     	; 0x8aa <__stack+0x4b>
 850:	1a 16       	cp	r1, r26
 852:	f0 40       	sbci	r31, 0x00	; 0
 854:	a2 2f       	mov	r26, r18
 856:	23 2f       	mov	r18, r19
 858:	34 2f       	mov	r19, r20
 85a:	44 27       	eor	r20, r20
 85c:	58 5f       	subi	r21, 0xF8	; 248
 85e:	f3 cf       	rjmp	.-26     	; 0x846 <__addsf3x+0x38>
 860:	46 95       	lsr	r20
 862:	37 95       	ror	r19
 864:	27 95       	ror	r18
 866:	a7 95       	ror	r26
 868:	f0 40       	sbci	r31, 0x00	; 0
 86a:	53 95       	inc	r21
 86c:	c9 f7       	brne	.-14     	; 0x860 <__stack+0x1>
 86e:	7e f4       	brtc	.+30     	; 0x88e <__stack+0x2f>
 870:	1f 16       	cp	r1, r31
 872:	ba 0b       	sbc	r27, r26
 874:	62 0b       	sbc	r22, r18
 876:	73 0b       	sbc	r23, r19
 878:	84 0b       	sbc	r24, r20
 87a:	ba f0       	brmi	.+46     	; 0x8aa <__stack+0x4b>
 87c:	91 50       	subi	r25, 0x01	; 1
 87e:	a1 f0       	breq	.+40     	; 0x8a8 <__stack+0x49>
 880:	ff 0f       	add	r31, r31
 882:	bb 1f       	adc	r27, r27
 884:	66 1f       	adc	r22, r22
 886:	77 1f       	adc	r23, r23
 888:	88 1f       	adc	r24, r24
 88a:	c2 f7       	brpl	.-16     	; 0x87c <__stack+0x1d>
 88c:	0e c0       	rjmp	.+28     	; 0x8aa <__stack+0x4b>
 88e:	ba 0f       	add	r27, r26
 890:	62 1f       	adc	r22, r18
 892:	73 1f       	adc	r23, r19
 894:	84 1f       	adc	r24, r20
 896:	48 f4       	brcc	.+18     	; 0x8aa <__stack+0x4b>
 898:	87 95       	ror	r24
 89a:	77 95       	ror	r23
 89c:	67 95       	ror	r22
 89e:	b7 95       	ror	r27
 8a0:	f7 95       	ror	r31
 8a2:	9e 3f       	cpi	r25, 0xFE	; 254
 8a4:	08 f0       	brcs	.+2      	; 0x8a8 <__stack+0x49>
 8a6:	b0 cf       	rjmp	.-160    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 8a8:	93 95       	inc	r25
 8aa:	88 0f       	add	r24, r24
 8ac:	08 f0       	brcs	.+2      	; 0x8b0 <__stack+0x51>
 8ae:	99 27       	eor	r25, r25
 8b0:	ee 0f       	add	r30, r30
 8b2:	97 95       	ror	r25
 8b4:	87 95       	ror	r24
 8b6:	08 95       	ret

000008b8 <__divsf3>:
 8b8:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__divsf3x>
 8bc:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__fp_round>
 8c0:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fp_pscB>
 8c4:	58 f0       	brcs	.+22     	; 0x8dc <__divsf3+0x24>
 8c6:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_pscA>
 8ca:	40 f0       	brcs	.+16     	; 0x8dc <__divsf3+0x24>
 8cc:	29 f4       	brne	.+10     	; 0x8d8 <__divsf3+0x20>
 8ce:	5f 3f       	cpi	r21, 0xFF	; 255
 8d0:	29 f0       	breq	.+10     	; 0x8dc <__divsf3+0x24>
 8d2:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_inf>
 8d6:	51 11       	cpse	r21, r1
 8d8:	0c 94 85 05 	jmp	0xb0a	; 0xb0a <__fp_szero>
 8dc:	0c 94 40 05 	jmp	0xa80	; 0xa80 <__fp_nan>

000008e0 <__divsf3x>:
 8e0:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_split3>
 8e4:	68 f3       	brcs	.-38     	; 0x8c0 <__divsf3+0x8>

000008e6 <__divsf3_pse>:
 8e6:	99 23       	and	r25, r25
 8e8:	b1 f3       	breq	.-20     	; 0x8d6 <__divsf3+0x1e>
 8ea:	55 23       	and	r21, r21
 8ec:	91 f3       	breq	.-28     	; 0x8d2 <__divsf3+0x1a>
 8ee:	95 1b       	sub	r25, r21
 8f0:	55 0b       	sbc	r21, r21
 8f2:	bb 27       	eor	r27, r27
 8f4:	aa 27       	eor	r26, r26
 8f6:	62 17       	cp	r22, r18
 8f8:	73 07       	cpc	r23, r19
 8fa:	84 07       	cpc	r24, r20
 8fc:	38 f0       	brcs	.+14     	; 0x90c <__divsf3_pse+0x26>
 8fe:	9f 5f       	subi	r25, 0xFF	; 255
 900:	5f 4f       	sbci	r21, 0xFF	; 255
 902:	22 0f       	add	r18, r18
 904:	33 1f       	adc	r19, r19
 906:	44 1f       	adc	r20, r20
 908:	aa 1f       	adc	r26, r26
 90a:	a9 f3       	breq	.-22     	; 0x8f6 <__divsf3_pse+0x10>
 90c:	35 d0       	rcall	.+106    	; 0x978 <__divsf3_pse+0x92>
 90e:	0e 2e       	mov	r0, r30
 910:	3a f0       	brmi	.+14     	; 0x920 <__divsf3_pse+0x3a>
 912:	e0 e8       	ldi	r30, 0x80	; 128
 914:	32 d0       	rcall	.+100    	; 0x97a <__divsf3_pse+0x94>
 916:	91 50       	subi	r25, 0x01	; 1
 918:	50 40       	sbci	r21, 0x00	; 0
 91a:	e6 95       	lsr	r30
 91c:	00 1c       	adc	r0, r0
 91e:	ca f7       	brpl	.-14     	; 0x912 <__divsf3_pse+0x2c>
 920:	2b d0       	rcall	.+86     	; 0x978 <__divsf3_pse+0x92>
 922:	fe 2f       	mov	r31, r30
 924:	29 d0       	rcall	.+82     	; 0x978 <__divsf3_pse+0x92>
 926:	66 0f       	add	r22, r22
 928:	77 1f       	adc	r23, r23
 92a:	88 1f       	adc	r24, r24
 92c:	bb 1f       	adc	r27, r27
 92e:	26 17       	cp	r18, r22
 930:	37 07       	cpc	r19, r23
 932:	48 07       	cpc	r20, r24
 934:	ab 07       	cpc	r26, r27
 936:	b0 e8       	ldi	r27, 0x80	; 128
 938:	09 f0       	breq	.+2      	; 0x93c <__divsf3_pse+0x56>
 93a:	bb 0b       	sbc	r27, r27
 93c:	80 2d       	mov	r24, r0
 93e:	bf 01       	movw	r22, r30
 940:	ff 27       	eor	r31, r31
 942:	93 58       	subi	r25, 0x83	; 131
 944:	5f 4f       	sbci	r21, 0xFF	; 255
 946:	3a f0       	brmi	.+14     	; 0x956 <__divsf3_pse+0x70>
 948:	9e 3f       	cpi	r25, 0xFE	; 254
 94a:	51 05       	cpc	r21, r1
 94c:	78 f0       	brcs	.+30     	; 0x96c <__divsf3_pse+0x86>
 94e:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_inf>
 952:	0c 94 85 05 	jmp	0xb0a	; 0xb0a <__fp_szero>
 956:	5f 3f       	cpi	r21, 0xFF	; 255
 958:	e4 f3       	brlt	.-8      	; 0x952 <__divsf3_pse+0x6c>
 95a:	98 3e       	cpi	r25, 0xE8	; 232
 95c:	d4 f3       	brlt	.-12     	; 0x952 <__divsf3_pse+0x6c>
 95e:	86 95       	lsr	r24
 960:	77 95       	ror	r23
 962:	67 95       	ror	r22
 964:	b7 95       	ror	r27
 966:	f7 95       	ror	r31
 968:	9f 5f       	subi	r25, 0xFF	; 255
 96a:	c9 f7       	brne	.-14     	; 0x95e <__divsf3_pse+0x78>
 96c:	88 0f       	add	r24, r24
 96e:	91 1d       	adc	r25, r1
 970:	96 95       	lsr	r25
 972:	87 95       	ror	r24
 974:	97 f9       	bld	r25, 7
 976:	08 95       	ret
 978:	e1 e0       	ldi	r30, 0x01	; 1
 97a:	66 0f       	add	r22, r22
 97c:	77 1f       	adc	r23, r23
 97e:	88 1f       	adc	r24, r24
 980:	bb 1f       	adc	r27, r27
 982:	62 17       	cp	r22, r18
 984:	73 07       	cpc	r23, r19
 986:	84 07       	cpc	r24, r20
 988:	ba 07       	cpc	r27, r26
 98a:	20 f0       	brcs	.+8      	; 0x994 <__divsf3_pse+0xae>
 98c:	62 1b       	sub	r22, r18
 98e:	73 0b       	sbc	r23, r19
 990:	84 0b       	sbc	r24, r20
 992:	ba 0b       	sbc	r27, r26
 994:	ee 1f       	adc	r30, r30
 996:	88 f7       	brcc	.-30     	; 0x97a <__divsf3_pse+0x94>
 998:	e0 95       	com	r30
 99a:	08 95       	ret

0000099c <__fixunssfsi>:
 99c:	0e 94 6a 05 	call	0xad4	; 0xad4 <__fp_splitA>
 9a0:	88 f0       	brcs	.+34     	; 0x9c4 <__fixunssfsi+0x28>
 9a2:	9f 57       	subi	r25, 0x7F	; 127
 9a4:	98 f0       	brcs	.+38     	; 0x9cc <__fixunssfsi+0x30>
 9a6:	b9 2f       	mov	r27, r25
 9a8:	99 27       	eor	r25, r25
 9aa:	b7 51       	subi	r27, 0x17	; 23
 9ac:	b0 f0       	brcs	.+44     	; 0x9da <__fixunssfsi+0x3e>
 9ae:	e1 f0       	breq	.+56     	; 0x9e8 <__fixunssfsi+0x4c>
 9b0:	66 0f       	add	r22, r22
 9b2:	77 1f       	adc	r23, r23
 9b4:	88 1f       	adc	r24, r24
 9b6:	99 1f       	adc	r25, r25
 9b8:	1a f0       	brmi	.+6      	; 0x9c0 <__fixunssfsi+0x24>
 9ba:	ba 95       	dec	r27
 9bc:	c9 f7       	brne	.-14     	; 0x9b0 <__fixunssfsi+0x14>
 9be:	14 c0       	rjmp	.+40     	; 0x9e8 <__fixunssfsi+0x4c>
 9c0:	b1 30       	cpi	r27, 0x01	; 1
 9c2:	91 f0       	breq	.+36     	; 0x9e8 <__fixunssfsi+0x4c>
 9c4:	0e 94 84 05 	call	0xb08	; 0xb08 <__fp_zero>
 9c8:	b1 e0       	ldi	r27, 0x01	; 1
 9ca:	08 95       	ret
 9cc:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__fp_zero>
 9d0:	67 2f       	mov	r22, r23
 9d2:	78 2f       	mov	r23, r24
 9d4:	88 27       	eor	r24, r24
 9d6:	b8 5f       	subi	r27, 0xF8	; 248
 9d8:	39 f0       	breq	.+14     	; 0x9e8 <__fixunssfsi+0x4c>
 9da:	b9 3f       	cpi	r27, 0xF9	; 249
 9dc:	cc f3       	brlt	.-14     	; 0x9d0 <__fixunssfsi+0x34>
 9de:	86 95       	lsr	r24
 9e0:	77 95       	ror	r23
 9e2:	67 95       	ror	r22
 9e4:	b3 95       	inc	r27
 9e6:	d9 f7       	brne	.-10     	; 0x9de <__fixunssfsi+0x42>
 9e8:	3e f4       	brtc	.+14     	; 0x9f8 <__fixunssfsi+0x5c>
 9ea:	90 95       	com	r25
 9ec:	80 95       	com	r24
 9ee:	70 95       	com	r23
 9f0:	61 95       	neg	r22
 9f2:	7f 4f       	sbci	r23, 0xFF	; 255
 9f4:	8f 4f       	sbci	r24, 0xFF	; 255
 9f6:	9f 4f       	sbci	r25, 0xFF	; 255
 9f8:	08 95       	ret

000009fa <__floatunsisf>:
 9fa:	e8 94       	clt
 9fc:	09 c0       	rjmp	.+18     	; 0xa10 <__floatsisf+0x12>

000009fe <__floatsisf>:
 9fe:	97 fb       	bst	r25, 7
 a00:	3e f4       	brtc	.+14     	; 0xa10 <__floatsisf+0x12>
 a02:	90 95       	com	r25
 a04:	80 95       	com	r24
 a06:	70 95       	com	r23
 a08:	61 95       	neg	r22
 a0a:	7f 4f       	sbci	r23, 0xFF	; 255
 a0c:	8f 4f       	sbci	r24, 0xFF	; 255
 a0e:	9f 4f       	sbci	r25, 0xFF	; 255
 a10:	99 23       	and	r25, r25
 a12:	a9 f0       	breq	.+42     	; 0xa3e <__floatsisf+0x40>
 a14:	f9 2f       	mov	r31, r25
 a16:	96 e9       	ldi	r25, 0x96	; 150
 a18:	bb 27       	eor	r27, r27
 a1a:	93 95       	inc	r25
 a1c:	f6 95       	lsr	r31
 a1e:	87 95       	ror	r24
 a20:	77 95       	ror	r23
 a22:	67 95       	ror	r22
 a24:	b7 95       	ror	r27
 a26:	f1 11       	cpse	r31, r1
 a28:	f8 cf       	rjmp	.-16     	; 0xa1a <__floatsisf+0x1c>
 a2a:	fa f4       	brpl	.+62     	; 0xa6a <__floatsisf+0x6c>
 a2c:	bb 0f       	add	r27, r27
 a2e:	11 f4       	brne	.+4      	; 0xa34 <__floatsisf+0x36>
 a30:	60 ff       	sbrs	r22, 0
 a32:	1b c0       	rjmp	.+54     	; 0xa6a <__floatsisf+0x6c>
 a34:	6f 5f       	subi	r22, 0xFF	; 255
 a36:	7f 4f       	sbci	r23, 0xFF	; 255
 a38:	8f 4f       	sbci	r24, 0xFF	; 255
 a3a:	9f 4f       	sbci	r25, 0xFF	; 255
 a3c:	16 c0       	rjmp	.+44     	; 0xa6a <__floatsisf+0x6c>
 a3e:	88 23       	and	r24, r24
 a40:	11 f0       	breq	.+4      	; 0xa46 <__floatsisf+0x48>
 a42:	96 e9       	ldi	r25, 0x96	; 150
 a44:	11 c0       	rjmp	.+34     	; 0xa68 <__floatsisf+0x6a>
 a46:	77 23       	and	r23, r23
 a48:	21 f0       	breq	.+8      	; 0xa52 <__floatsisf+0x54>
 a4a:	9e e8       	ldi	r25, 0x8E	; 142
 a4c:	87 2f       	mov	r24, r23
 a4e:	76 2f       	mov	r23, r22
 a50:	05 c0       	rjmp	.+10     	; 0xa5c <__floatsisf+0x5e>
 a52:	66 23       	and	r22, r22
 a54:	71 f0       	breq	.+28     	; 0xa72 <__floatsisf+0x74>
 a56:	96 e8       	ldi	r25, 0x86	; 134
 a58:	86 2f       	mov	r24, r22
 a5a:	70 e0       	ldi	r23, 0x00	; 0
 a5c:	60 e0       	ldi	r22, 0x00	; 0
 a5e:	2a f0       	brmi	.+10     	; 0xa6a <__floatsisf+0x6c>
 a60:	9a 95       	dec	r25
 a62:	66 0f       	add	r22, r22
 a64:	77 1f       	adc	r23, r23
 a66:	88 1f       	adc	r24, r24
 a68:	da f7       	brpl	.-10     	; 0xa60 <__floatsisf+0x62>
 a6a:	88 0f       	add	r24, r24
 a6c:	96 95       	lsr	r25
 a6e:	87 95       	ror	r24
 a70:	97 f9       	bld	r25, 7
 a72:	08 95       	ret

00000a74 <__fp_inf>:
 a74:	97 f9       	bld	r25, 7
 a76:	9f 67       	ori	r25, 0x7F	; 127
 a78:	80 e8       	ldi	r24, 0x80	; 128
 a7a:	70 e0       	ldi	r23, 0x00	; 0
 a7c:	60 e0       	ldi	r22, 0x00	; 0
 a7e:	08 95       	ret

00000a80 <__fp_nan>:
 a80:	9f ef       	ldi	r25, 0xFF	; 255
 a82:	80 ec       	ldi	r24, 0xC0	; 192
 a84:	08 95       	ret

00000a86 <__fp_pscA>:
 a86:	00 24       	eor	r0, r0
 a88:	0a 94       	dec	r0
 a8a:	16 16       	cp	r1, r22
 a8c:	17 06       	cpc	r1, r23
 a8e:	18 06       	cpc	r1, r24
 a90:	09 06       	cpc	r0, r25
 a92:	08 95       	ret

00000a94 <__fp_pscB>:
 a94:	00 24       	eor	r0, r0
 a96:	0a 94       	dec	r0
 a98:	12 16       	cp	r1, r18
 a9a:	13 06       	cpc	r1, r19
 a9c:	14 06       	cpc	r1, r20
 a9e:	05 06       	cpc	r0, r21
 aa0:	08 95       	ret

00000aa2 <__fp_round>:
 aa2:	09 2e       	mov	r0, r25
 aa4:	03 94       	inc	r0
 aa6:	00 0c       	add	r0, r0
 aa8:	11 f4       	brne	.+4      	; 0xaae <__fp_round+0xc>
 aaa:	88 23       	and	r24, r24
 aac:	52 f0       	brmi	.+20     	; 0xac2 <__fp_round+0x20>
 aae:	bb 0f       	add	r27, r27
 ab0:	40 f4       	brcc	.+16     	; 0xac2 <__fp_round+0x20>
 ab2:	bf 2b       	or	r27, r31
 ab4:	11 f4       	brne	.+4      	; 0xaba <__fp_round+0x18>
 ab6:	60 ff       	sbrs	r22, 0
 ab8:	04 c0       	rjmp	.+8      	; 0xac2 <__fp_round+0x20>
 aba:	6f 5f       	subi	r22, 0xFF	; 255
 abc:	7f 4f       	sbci	r23, 0xFF	; 255
 abe:	8f 4f       	sbci	r24, 0xFF	; 255
 ac0:	9f 4f       	sbci	r25, 0xFF	; 255
 ac2:	08 95       	ret

00000ac4 <__fp_split3>:
 ac4:	57 fd       	sbrc	r21, 7
 ac6:	90 58       	subi	r25, 0x80	; 128
 ac8:	44 0f       	add	r20, r20
 aca:	55 1f       	adc	r21, r21
 acc:	59 f0       	breq	.+22     	; 0xae4 <__fp_splitA+0x10>
 ace:	5f 3f       	cpi	r21, 0xFF	; 255
 ad0:	71 f0       	breq	.+28     	; 0xaee <__fp_splitA+0x1a>
 ad2:	47 95       	ror	r20

00000ad4 <__fp_splitA>:
 ad4:	88 0f       	add	r24, r24
 ad6:	97 fb       	bst	r25, 7
 ad8:	99 1f       	adc	r25, r25
 ada:	61 f0       	breq	.+24     	; 0xaf4 <__fp_splitA+0x20>
 adc:	9f 3f       	cpi	r25, 0xFF	; 255
 ade:	79 f0       	breq	.+30     	; 0xafe <__fp_splitA+0x2a>
 ae0:	87 95       	ror	r24
 ae2:	08 95       	ret
 ae4:	12 16       	cp	r1, r18
 ae6:	13 06       	cpc	r1, r19
 ae8:	14 06       	cpc	r1, r20
 aea:	55 1f       	adc	r21, r21
 aec:	f2 cf       	rjmp	.-28     	; 0xad2 <__fp_split3+0xe>
 aee:	46 95       	lsr	r20
 af0:	f1 df       	rcall	.-30     	; 0xad4 <__fp_splitA>
 af2:	08 c0       	rjmp	.+16     	; 0xb04 <__fp_splitA+0x30>
 af4:	16 16       	cp	r1, r22
 af6:	17 06       	cpc	r1, r23
 af8:	18 06       	cpc	r1, r24
 afa:	99 1f       	adc	r25, r25
 afc:	f1 cf       	rjmp	.-30     	; 0xae0 <__fp_splitA+0xc>
 afe:	86 95       	lsr	r24
 b00:	71 05       	cpc	r23, r1
 b02:	61 05       	cpc	r22, r1
 b04:	08 94       	sec
 b06:	08 95       	ret

00000b08 <__fp_zero>:
 b08:	e8 94       	clt

00000b0a <__fp_szero>:
 b0a:	bb 27       	eor	r27, r27
 b0c:	66 27       	eor	r22, r22
 b0e:	77 27       	eor	r23, r23
 b10:	cb 01       	movw	r24, r22
 b12:	97 f9       	bld	r25, 7
 b14:	08 95       	ret

00000b16 <__mulsf3>:
 b16:	0e 94 9e 05 	call	0xb3c	; 0xb3c <__mulsf3x>
 b1a:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__fp_round>
 b1e:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_pscA>
 b22:	38 f0       	brcs	.+14     	; 0xb32 <__mulsf3+0x1c>
 b24:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fp_pscB>
 b28:	20 f0       	brcs	.+8      	; 0xb32 <__mulsf3+0x1c>
 b2a:	95 23       	and	r25, r21
 b2c:	11 f0       	breq	.+4      	; 0xb32 <__mulsf3+0x1c>
 b2e:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_inf>
 b32:	0c 94 40 05 	jmp	0xa80	; 0xa80 <__fp_nan>
 b36:	11 24       	eor	r1, r1
 b38:	0c 94 85 05 	jmp	0xb0a	; 0xb0a <__fp_szero>

00000b3c <__mulsf3x>:
 b3c:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_split3>
 b40:	70 f3       	brcs	.-36     	; 0xb1e <__mulsf3+0x8>

00000b42 <__mulsf3_pse>:
 b42:	95 9f       	mul	r25, r21
 b44:	c1 f3       	breq	.-16     	; 0xb36 <__mulsf3+0x20>
 b46:	95 0f       	add	r25, r21
 b48:	50 e0       	ldi	r21, 0x00	; 0
 b4a:	55 1f       	adc	r21, r21
 b4c:	62 9f       	mul	r22, r18
 b4e:	f0 01       	movw	r30, r0
 b50:	72 9f       	mul	r23, r18
 b52:	bb 27       	eor	r27, r27
 b54:	f0 0d       	add	r31, r0
 b56:	b1 1d       	adc	r27, r1
 b58:	63 9f       	mul	r22, r19
 b5a:	aa 27       	eor	r26, r26
 b5c:	f0 0d       	add	r31, r0
 b5e:	b1 1d       	adc	r27, r1
 b60:	aa 1f       	adc	r26, r26
 b62:	64 9f       	mul	r22, r20
 b64:	66 27       	eor	r22, r22
 b66:	b0 0d       	add	r27, r0
 b68:	a1 1d       	adc	r26, r1
 b6a:	66 1f       	adc	r22, r22
 b6c:	82 9f       	mul	r24, r18
 b6e:	22 27       	eor	r18, r18
 b70:	b0 0d       	add	r27, r0
 b72:	a1 1d       	adc	r26, r1
 b74:	62 1f       	adc	r22, r18
 b76:	73 9f       	mul	r23, r19
 b78:	b0 0d       	add	r27, r0
 b7a:	a1 1d       	adc	r26, r1
 b7c:	62 1f       	adc	r22, r18
 b7e:	83 9f       	mul	r24, r19
 b80:	a0 0d       	add	r26, r0
 b82:	61 1d       	adc	r22, r1
 b84:	22 1f       	adc	r18, r18
 b86:	74 9f       	mul	r23, r20
 b88:	33 27       	eor	r19, r19
 b8a:	a0 0d       	add	r26, r0
 b8c:	61 1d       	adc	r22, r1
 b8e:	23 1f       	adc	r18, r19
 b90:	84 9f       	mul	r24, r20
 b92:	60 0d       	add	r22, r0
 b94:	21 1d       	adc	r18, r1
 b96:	82 2f       	mov	r24, r18
 b98:	76 2f       	mov	r23, r22
 b9a:	6a 2f       	mov	r22, r26
 b9c:	11 24       	eor	r1, r1
 b9e:	9f 57       	subi	r25, 0x7F	; 127
 ba0:	50 40       	sbci	r21, 0x00	; 0
 ba2:	9a f0       	brmi	.+38     	; 0xbca <__mulsf3_pse+0x88>
 ba4:	f1 f0       	breq	.+60     	; 0xbe2 <__mulsf3_pse+0xa0>
 ba6:	88 23       	and	r24, r24
 ba8:	4a f0       	brmi	.+18     	; 0xbbc <__mulsf3_pse+0x7a>
 baa:	ee 0f       	add	r30, r30
 bac:	ff 1f       	adc	r31, r31
 bae:	bb 1f       	adc	r27, r27
 bb0:	66 1f       	adc	r22, r22
 bb2:	77 1f       	adc	r23, r23
 bb4:	88 1f       	adc	r24, r24
 bb6:	91 50       	subi	r25, 0x01	; 1
 bb8:	50 40       	sbci	r21, 0x00	; 0
 bba:	a9 f7       	brne	.-22     	; 0xba6 <__mulsf3_pse+0x64>
 bbc:	9e 3f       	cpi	r25, 0xFE	; 254
 bbe:	51 05       	cpc	r21, r1
 bc0:	80 f0       	brcs	.+32     	; 0xbe2 <__mulsf3_pse+0xa0>
 bc2:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_inf>
 bc6:	0c 94 85 05 	jmp	0xb0a	; 0xb0a <__fp_szero>
 bca:	5f 3f       	cpi	r21, 0xFF	; 255
 bcc:	e4 f3       	brlt	.-8      	; 0xbc6 <__mulsf3_pse+0x84>
 bce:	98 3e       	cpi	r25, 0xE8	; 232
 bd0:	d4 f3       	brlt	.-12     	; 0xbc6 <__mulsf3_pse+0x84>
 bd2:	86 95       	lsr	r24
 bd4:	77 95       	ror	r23
 bd6:	67 95       	ror	r22
 bd8:	b7 95       	ror	r27
 bda:	f7 95       	ror	r31
 bdc:	e7 95       	ror	r30
 bde:	9f 5f       	subi	r25, 0xFF	; 255
 be0:	c1 f7       	brne	.-16     	; 0xbd2 <__mulsf3_pse+0x90>
 be2:	fe 2b       	or	r31, r30
 be4:	88 0f       	add	r24, r24
 be6:	91 1d       	adc	r25, r1
 be8:	96 95       	lsr	r25
 bea:	87 95       	ror	r24
 bec:	97 f9       	bld	r25, 7
 bee:	08 95       	ret

00000bf0 <_exit>:
 bf0:	f8 94       	cli

00000bf2 <__stop_program>:
 bf2:	ff cf       	rjmp	.-2      	; 0xbf2 <__stop_program>
